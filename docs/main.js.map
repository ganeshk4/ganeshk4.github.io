{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/custom-btn/custom-btn.component.ts","./src/app/components/custom-btn/custom-btn.component.html","./src/app/components/game-config/game-config.component.ts","./src/app/components/game-config/game-config.component.html","./src/app/components/game/game.component.ts","./src/app/components/game/game.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/modal/option-select/option-select.component.ts","./src/app/components/modal/option-select/option-select.component.html","./src/app/service/state-manager.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { GameConfigComponent } from 'src/app/components/game-config/game-config.component';\nimport { GameComponent } from 'src/app/components/game/game.component';\nimport { HomeComponent } from 'src/app/components/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [{\n    path:'',\n    pathMatch: 'full',\n    component: HomeComponent\n  },{\n    path: 'two-player',\n    component: GameConfigComponent\n  },{\n    path: 'game',\n    component: GameComponent\n  }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'connect-four';\n  constructor(private readonly router: Router) {\n\n  }\n  btnClick() {\n    this.router.navigate(['/two-player']);\n  }\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustomBtnComponent } from './components/custom-btn/custom-btn.component';\nimport { GameConfigComponent } from './components/game-config/game-config.component';\nimport { GameComponent } from './components/game/game.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OptionSelectComponent } from './components/modal/option-select/option-select.component';\nimport { StateManagerService } from './service/state-manager.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomBtnComponent,\n    GameConfigComponent,\n    HomeComponent,\n    OptionSelectComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatDialogModule,\n    MatRadioModule,\n    ReactiveFormsModule\n  ],\n  providers: [StateManagerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-btn',\n  templateUrl: './custom-btn.component.html',\n  styleUrls: ['./custom-btn.component.scss']\n})\nexport class CustomBtnComponent implements OnInit {\n\n  @Input() text:string;\n  @Input() bgClass: string;\n  @Input() colorClass: string = 'bg-blue-one';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"custom-btn\" [ngClass]=\"colorClass\">\n  <div class=\"btn-icon\" [ngClass]=\"bgClass\"></div>\n  <div class=\"btn-text\">{{text}}</div>\n</div>\n","import { OptionSelectComponent } from 'src/app/components/modal/option-select/option-select.component';\nimport { EnumNumberOfGames, EnumWhoStarts, numberOfGames, StateManagerService, whoStarts } from 'src/app/service/state-manager.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-game-config',\n  templateUrl: './game-config.component.html',\n  styleUrls: ['./game-config.component.scss']\n})\nexport class GameConfigComponent implements OnInit {\n\n  form: FormGroup;\n  selectedNumberOfGames = numberOfGames[EnumNumberOfGames.TWO];\n  selectedwhoStarts = whoStarts[EnumWhoStarts.ALTERNATE];\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly router: Router,\n    private readonly service: StateManagerService,\n    private readonly formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      firstPlayerName: ['David'],\n      secondPlayerName: ['Maria'],\n      numberOfGames: [EnumNumberOfGames.TWO],\n      whoStarts: [EnumWhoStarts.ALTERNATE],\n    });\n  }\n\n  openTurnModal() {\n    const dialogRef = this.dialog.open(OptionSelectComponent, {\n      width: '450px',\n      data: { selection: this.form.getRawValue().whoStarts, options: whoStarts, title: 'Who Starts' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.form.controls['whoStarts'].setValue(result);\n        this.selectedwhoStarts = whoStarts[result];\n      }\n    });\n  }\n\n  openGameNumbersModal() {\n    const dialogRef = this.dialog.open(OptionSelectComponent, {\n      width: '450px',\n      data: {selection: this.form.getRawValue().numberOfGames, options: numberOfGames, title: 'Number Of Game' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.form.controls['numberOfGames'].setValue(result);\n        this.selectedNumberOfGames = numberOfGames[result];\n      }\n    });\n  }\n\n  start() {\n    this.service.config = this.form.getRawValue();\n    this.router.navigate(['/game']);\n  }\n\n}\n","<div class=\"container\">\n  <div [formGroup]=\"form\" class='panel-white'>\n    <div class=\"setting setting-player1\">\n      <div class=\"setting-icon-border\">\n        <div class=\"setting-icon\"></div>\n      </div>\n      <div class=\"setting-desc\">\n        <div class=\"info\">Player 01</div>\n        <div class=\"selection\">\n          <input formControlName=\"firstPlayerName\" type=\"text\"/>\n        </div>\n      </div>\n    </div>\n    <div class=\"setting setting-player2\">\n      <div class=\"setting-icon-border\">\n        <div class=\"setting-icon\"></div>\n      </div>\n      <div class=\"setting-desc\">\n        <div class=\"info\">Player 02</div>\n        <div class=\"selection\">\n          <input formControlName=\"secondPlayerName\" type=\"text\"/>\n        </div>\n      </div>\n    </div>\n    <div (click)=\"openGameNumbersModal()\" class=\"setting setting-gamenumber\">\n      <div class=\"setting-icon-border\">\n        <div class=\"setting-icon\"></div>\n      </div>\n      <div class=\"setting-desc\">\n        <div class=\"info\">Number of Game</div>\n        <div class=\"selection\">{{selectedNumberOfGames}}</div>\n      </div>\n    </div>\n    <div (click)=\"openTurnModal()\" class=\"setting setting-turn\">\n      <div class=\"setting-icon-border\">\n        <div class=\"setting-icon\"></div>\n      </div>\n      <div class=\"setting-desc\">\n        <div class=\"info\">Who starts</div>\n        <div class=\"selection\">{{selectedwhoStarts}}</div>\n      </div>\n    </div>\n    <div class=\"separator\"></div>\n    <div (click)=\"start()\" class=\"start-btn\">Start Game</div>\n  </div>\n</div>\n","import { EnumNumberOfGames, EnumWhoStarts, StateManagerService } from 'src/app/service/state-manager.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nconst checkInline = 4;\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\n  turn: string;\n  lastGameTurn: string;\n  cells = [];\n  gameEnd = false;\n  tornamentEnd = false;\n  tournamentWinnerName: string;\n  roundWinnerName: string;\n\n  games = {\n    whoStarts: EnumWhoStarts.ALTERNATE,\n    totalGames: 0,\n    currentGame: 0,\n    firstPlayerName: '',\n    secondPlayerName: '',\n    firstPlayerScore: 0,\n    secondPlayerScore: 0\n  }\n\n  constructor(\n    private readonly service: StateManagerService,\n    private readonly router: Router) { }\n\n  ngOnInit(): void {\n    this.startNewGame();\n  }\n\n  private decideTurn() {\n    switch (this.games.whoStarts) {\n      case EnumWhoStarts.ALTERNATE:\n        if (this.lastGameTurn === 'P1') {\n          this.turn = 'P2';\n          this.lastGameTurn = 'P2';\n        } else {\n          this.turn = 'P1';\n          this.lastGameTurn = 'P1';\n        }\n      break;\n      case EnumWhoStarts.FIRST_PLAYER:\n        this.turn = 'P1';\n      break;\n      case EnumWhoStarts.SECOND_PLAYER:\n        this.turn = 'P2';\n      break;\n      case EnumWhoStarts.LOOSER:\n        if (this.games.firstPlayerName === this.roundWinnerName) {\n          this.turn = 'P2';\n        } else {\n          this.turn = 'P1';\n        }\n      break;\n      case EnumWhoStarts.WINNER:\n        if (this.games.firstPlayerName === this.roundWinnerName) {\n          this.turn = 'P1';\n        } else {\n          this.turn = 'P2';\n        }\n      break;\n      default:\n        break;\n    }\n  }\n\n  private startNewGame() {\n    this.roundWinnerName = '';\n    this.gameEnd = false;\n    if (!this.service.config) {\n      this.router.navigate(['/']);\n    }\n    const {firstPlayerName, secondPlayerName, numberOfGames, whoStarts} = this.service.config;\n    this.games.firstPlayerName = firstPlayerName;\n    this.games.secondPlayerName = secondPlayerName;\n    this.games.whoStarts = whoStarts;\n    this.games.currentGame++;\n    switch (numberOfGames) {\n      case EnumNumberOfGames.TWO:\n        this.games.totalGames = 2;\n      break;\n      case EnumNumberOfGames.THREE:\n        this.games.totalGames = 3;\n      break;\n      case EnumNumberOfGames.FIVE:\n        this.games.totalGames = 5;\n      break;\n      case EnumNumberOfGames.TEN:\n        this.games.totalGames = 10;\n      break;\n    }\n    this.cells =  [\n      [0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0]];\n\n    this.decideTurn();\n  }\n\n  private switchTurn() {\n    if (this.turn === 'P1') {\n      this.turn = 'P2';\n    } else {\n      this.turn = 'P1';\n    }\n  }\n\n  private findDestinationCell(rowIndex: number, cellIndex: number) {\n    if (rowIndex < this.cells.length - 1) {\n      if (!this.cells[rowIndex + 1][cellIndex]) {\n        this.findDestinationCell(rowIndex + 1, cellIndex);\n      } else {\n        this.cells[rowIndex][cellIndex] = this.turn;\n        this.checkWin(rowIndex, cellIndex);\n      }\n    } else {\n      if (!this.cells[rowIndex][cellIndex]) {\n        this.cells[rowIndex][cellIndex] = this.turn;\n        this.checkWin(rowIndex, cellIndex);\n      }\n    }\n  }\n\n  cellSelected(rowIndex: number, cellIndex: number) {\n    if (this.gameEnd) {\n      return;\n    }\n    if (!this.cells[rowIndex][cellIndex]) {\n      this.findDestinationCell(rowIndex, cellIndex);\n    }\n  }\n\n  private checkVerticle(rowIndex: number, cellIndex: number): boolean {\n    let success = false;\n    let counter = 0;\n    let playerId = this.cells[rowIndex][cellIndex];\n    for (let i = 0; i < this.cells.length; i++) {\n      if (playerId === this.cells[i][cellIndex]) {\n        counter++;\n        if (counter > 3) {\n          success = true;\n          break;\n        }\n      } else {\n        counter = 0;\n      }\n    }\n    return success;\n  }\n\n  private checkHorizontal(rowIndex: number, cellIndex: number): boolean {\n    let success = false;\n    let counter = 0;\n    let playerId = this.cells[rowIndex][cellIndex];\n    for (let i = 0; i < this.cells.length; i++) {\n      if (playerId === this.cells[rowIndex][i]) {\n        counter++;\n        if (counter > 3) {\n          success = true;\n          break;\n        }\n      } else {\n        counter = 0;\n      }\n    }\n    return success;\n  }\n\n  // check diagonal \\\n  private checkFirstDiagonal(rowIndex: number, cellIndex: number): boolean {\n    let success = false;\n    let counter = 0;\n    const playerId = this.cells[rowIndex][cellIndex];\n    let startRowIndex = rowIndex;\n    let startCellIndex = cellIndex;\n    while (!(startRowIndex === 0 || startCellIndex === 0)) {\n      startRowIndex--;\n      startCellIndex--;\n    }\n\n    while (!(startRowIndex === this.cells.length || startCellIndex === this.cells.length)) {\n      if (playerId === this.cells[startRowIndex][startCellIndex]) {\n        counter++;\n        if (counter > 3) {\n          success = true;\n          break;\n        }\n      } else {\n        counter = 0;\n      }\n      startRowIndex++;\n      startCellIndex++;\n    }\n\n    return success;\n  }\n\n  // check diagonal /\n  private checkOtherDiagonal(rowIndex: number, cellIndex: number): boolean {\n    let success = false;\n    let counter = 0;\n    const playerId = this.cells[rowIndex][cellIndex];\n    let startRowIndex = rowIndex;\n    let startCellIndex = cellIndex;\n    while (!(startRowIndex === 0 || startCellIndex === this.cells.length - 1)) {\n      startRowIndex--;\n      startCellIndex++;\n    }\n\n    while (!(startRowIndex === this.cells.length || startCellIndex === 0)) {\n      if (playerId === this.cells[startRowIndex][startCellIndex]) {\n        counter++;\n        if (counter > 3) {\n          success = true;\n          break;\n        }\n      } else {\n        counter = 0;\n      }\n      startRowIndex++;\n      startCellIndex--;\n    }\n\n    return success;\n  }\n\n  private checkDiagonals(rowIndex: number, cellIndex: number): boolean {\n    // first-daigonal\n    let success = false;\n    success = this.checkFirstDiagonal(rowIndex, cellIndex);\n    if (!success) {\n      success = this.checkOtherDiagonal(rowIndex, cellIndex);\n    }\n    return success;\n  }\n\n  private checkWin(rowIndex: number, cellIndex: number): boolean {\n    let success;\n    success = this.checkVerticle(rowIndex, cellIndex);\n    if (!success) {\n      success = this.checkHorizontal(rowIndex, cellIndex);\n    }\n    if (!success) {\n      success = this.checkDiagonals(rowIndex, cellIndex);\n    }\n    if (!success) {\n      this.switchTurn();\n    } else {\n      this.gameEnd = true;\n      if (this.turn === 'P1') {\n        this.games.firstPlayerScore++;\n        this.roundWinnerName = this.games.firstPlayerName;\n      } else {\n        this.games.secondPlayerScore++;\n        this.roundWinnerName = this.games.secondPlayerName;\n      }\n\n      if (this.games.totalGames === this.games.currentGame) {\n        this.endGame();\n      }\n    }\n    return success;\n  }\n\n  endGame() {\n    this.tornamentEnd = true;\n    if (this.games.firstPlayerScore > this.games.secondPlayerScore) {\n      this.tournamentWinnerName = this.games.firstPlayerName;\n    } else {\n      this.tournamentWinnerName = this.games.secondPlayerName;\n    }\n  }\n\n}\n","<div class=\"container\">\n  <div class='panel-white'>\n    <div class=\"board\">\n      <div *ngFor=\"let cellRow of cells; let cellRowIndex = index\" class=\"cell-row\">\n        <div [ngClass]=\"cells[cellRowIndex][cellIndex]\" (click)=\"cellSelected(cellRowIndex, cellIndex)\" *ngFor=\"let cell of cellRow; let cellIndex = index\" class=\"cell\">\n        </div>\n      </div>\n    </div>\n    <div class=\"meta\">\n    <div class=\"game-title\">{{games.totalGames}} Games Tournament</div>\n      <div *ngIf=\"!gameEnd\" class=\"round-title\">Playing Game {{games.currentGame}}</div>\n      <div *ngIf=\"gameEnd\" class=\"congratulation-section\">\n        <div class=\"congrats-text\">Congratulation!</div>\n        <div *ngIf=\"tornamentEnd\"><span>{{tournamentWinnerName}}, you won tournament</span></div>\n        <div *ngIf=\"!tornamentEnd\"><span>{{roundWinnerName}}, you won Game {{games.currentGame}}</span></div>\n      </div>\n      <div class=\"player player1\">\n        <div [ngClass]=\"turn === 'P1' ? 'active' : ''\"class=\"icon-border\">\n          <div class=\"icon\"></div>\n        </div>\n        <div class=\"desc\">\n          <div class=\"p-info\">\n            <div class=\"info\">Player 01</div>\n            <div class=\"name\">{{games.firstPlayerName}}</div>\n          </div>\n          <div class=\"score\">\n            <div class=\"text\">Score</div>\n            <div class=\"total\">{{games.firstPlayerScore}}</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"player player2\">\n        <div [ngClass]=\"turn === 'P2' ? 'active' : ''\" class=\"icon-border\">\n          <div class=\"icon\"></div>\n        </div>\n        <div class=\"desc\">\n          <div class=\"p-info\">\n            <div class=\"info\">Player 02</div>\n            <div class=\"name\">{{games.secondPlayerName}}</div>\n          </div>\n          <div class=\"score\">\n            <div class=\"text\">Score</div>\n            <div class=\"total\">{{games.secondPlayerScore}}</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"separator\"></div>\n      <div class=\"buttons\">\n        <div (click)=\"startNewGame()\" *ngIf=\"!tornamentEnd\" class=\"btn undo\">Next Game</div>\n        <div (click)=\"endGame()\" *ngIf=\"!tornamentEnd\" class=\"btn end\">End Tournament</div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  constructor(private readonly router: Router) {\n\n  }\n  btnClick() {\n    this.router.navigate(['/two-player']);\n  }\n\n}\n\n","<div class=\"container\">\n  <div class='design'>\n    <div class='panel-white'>\n      <div class=\"top-section\">\n        <div class=\"game-title\">\n          <div class=\"main-title\">Connect Four!</div>\n          <div class=\"sub-title\">Play with other players around the world.</div>\n        </div>\n        <div class=\"play-video\">\n          <div class=\"video-icon\">\n            <div class=\"play-icon\"></div>\n            <div class=\"play-text\">PLAY</div>\n          </div>\n        </div>\n        <div class=\"img\"></div>\n      </div>\n      <div class=\"btn-container\">\n        <div class=\"btn-row\">\n          <app-custom-btn [text]=\"'Custom Game'\" [bgClass]=\"'one'\" ></app-custom-btn>\n          <app-custom-btn (click)=\"btnClick()\" [text]=\"'Two Players'\" [bgClass]=\"'two'\" [colorClass]=\"'bg-blue-two'\"></app-custom-btn>\n        </div>\n        <div class=\"btn-row\">\n          <app-custom-btn [text]=\"'Game Online'\" [bgClass]=\"'online'\" [colorClass]=\"'bg-blue-three'\"></app-custom-btn>\n          <app-custom-btn [text]=\"'Training Game'\" [bgClass]=\"'training'\" [colorClass]=\"'bg-purple-one'\"></app-custom-btn>\n        </div>\n      </div>\n    </div>\n    <div class='panel-grey'>\n      <span>© 2020</span>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-option-select',\n  templateUrl: './option-select.component.html',\n  styleUrls: ['./option-select.component.scss']\n})\nexport class OptionSelectComponent implements OnInit {\n\n  title: string;\n  options = [];\n  form: FormGroup;\n  constructor(@Inject(MAT_DIALOG_DATA) private readonly data: any,\n    private readonly dialogRef: MatDialogRef<OptionSelectComponent>,\n    private readonly fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    const { data } = this;\n    const { options, selection, title } = data;\n    const keys = Object.keys(options);\n    for (const key of keys) {\n      this.options.push({label: options[key], value: key})\n    }\n    this.title = title;\n    this.form = this.fb.group({\n      selection: [selection]\n    });\n  }\n\n  okay() {\n    this.dialogRef.close(this.form.getRawValue().selection);\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"modal-title\">{{title}}</div>\n<div [formGroup]=\"form\" class=\"options\">\n  <mat-radio-group aria-label=\"Select an option\" formControlName=\"selection\">\n    <div *ngFor=\"let opt of options\" class=\"option\">\n      <mat-radio-button color=\"primary\" [value]=\"opt.value\">{{opt.label}}</mat-radio-button>\n    </div>\n  </mat-radio-group>\n</div>\n<div class=\"separator\"></div>\n<div class=\"buttons\">\n  <div (click)=\"cancel()\" class=\"cancel\">CANCEL</div>\n  <div (click)=\"okay()\"class=\"ok\">OK</div>\n</div>\n","import { Injectable } from '@angular/core';\n\nexport enum EnumNumberOfGames {\n  TWO = 'TWO',\n  THREE = 'THREE',\n  FIVE = 'FIVE',\n  TEN = 'TEN'\n}\n\nexport enum EnumWhoStarts {\n  ALTERNATE = 'ALTERNATE',\n  LOOSER = 'LOOSER',\n  WINNER = 'WINNER',\n  FIRST_PLAYER = 'FIRST_PLAYER',\n  SECOND_PLAYER = 'SECOND_PLAYER'\n}\n\nexport interface GameConfig {\n  firstPlayerName: string;\n  secondPlayerName: string;\n  numberOfGames: EnumNumberOfGames;\n  whoStarts: EnumWhoStarts;\n}\n\nexport interface IterableOptions {\n  [key:string]: string\n}\n\nexport const numberOfGames: IterableOptions = {\n  TWO: '2 Games',\n  THREE: '3 Games',\n  FIVE: '5 Games',\n  TEN: '10 Games'\n}\n\nexport const whoStarts: IterableOptions = {\n  ALTERNATE: 'Alternative turn',\n  LOOSER: 'Looser first',\n  WINNER: 'Winner first',\n  FIRST_PLAYER: 'Always player 01',\n  SECOND_PLAYER: 'Always player 02'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateManagerService {\n  config: GameConfig;\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}